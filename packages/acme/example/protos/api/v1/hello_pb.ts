// @generated by protoc-gen-es v1.3.0 with parameter "target=ts"
// @generated from file packages/acme/example/protos/api/v1/hello.proto (package acme.example.api.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * The response message containing the greetings
 *
 * @generated from message acme.example.api.v1.Hello
 */
export class Hello extends Message<Hello> {
  /**
   * Greeting message
   *
   * @generated from field: string message = 1;
   */
  message = "";

  constructor(data?: PartialMessage<Hello>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "acme.example.api.v1.Hello";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Hello {
    return new Hello().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Hello {
    return new Hello().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Hello {
    return new Hello().fromJsonString(jsonString, options);
  }

  static equals(a: Hello | PlainMessage<Hello> | undefined, b: Hello | PlainMessage<Hello> | undefined): boolean {
    return proto3.util.equals(Hello, a, b);
  }
}

